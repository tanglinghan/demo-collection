<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.b0x0.demo.io.dao.ExportDao">

    <resultMap type="top.b0x0.demo.io.domain.Tables" id="TablesMap">
        <result property="tableName" column="TABLE_NAME" jdbcType="VARCHAR"/>
        <result property="tableType" column="TABLE_TYPE" jdbcType="VARCHAR"/>
        <result property="engine" column="ENGINE" jdbcType="VARCHAR"/>
        <result property="tableCollation" column="TABLE_COLLATION" jdbcType="VARCHAR"/>
        <result property="createOptions" column="CREATE_OPTIONS" jdbcType="VARCHAR"/>
        <result property="tableComment" column="TABLE_COMMENT" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="BaseResult_TABLES">
        TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, TABLE_TYPE,
        ENGINE, VERSION,ROW_FORMAT,TABLE_ROWS, AVG_ROW_LENGTH,
        DATA_LENGTH, MAX_DATA_LENGTH, INDEX_LENGTH, DATA_FREE,
        AUTO_INCREMENT, CREATE_TIME, UPDATE_TIME, CHECK_TIME,
        TABLE_COLLATION, CHECKSUM, CREATE_OPTIONS, TABLE_COMMENT
    </sql>

    <select id="getTables" resultMap="TablesMap">
        SELECT
        TABLE_NAME,
        TABLE_TYPE,
        ENGINE,
        TABLE_COLLATION,
        TABLE_COMMENT,
        CREATE_OPTIONS
        FROM information_schema.TABLES
        WHERE
	        TABLE_SCHEMA = #{dbName}
    </select>

    <resultMap type="top.b0x0.demo.io.domain.Columns" id="ColumnsMap">
        <result property="columnName" column="COLUMN_NAME" jdbcType="VARCHAR"/>
        <result property="ordinalPosition" column="ORDINAL_POSITION" jdbcType="OTHER"/>
        <result property="columnDefault" column="COLUMN_DEFAULT" jdbcType="OTHER"/>
        <result property="isNullable" column="IS_NULLABLE" jdbcType="VARCHAR"/>
        <result property="dataType" column="DATA_TYPE" jdbcType="VARCHAR"/>
        <result property="characterMaximumLength" column="CHARACTER_MAXIMUM_LENGTH" jdbcType="OTHER"/>
        <result property="columnType" column="COLUMN_TYPE" jdbcType="OTHER"/>
        <result property="columnKey" column="COLUMN_KEY" jdbcType="VARCHAR"/>
        <result property="extra" column="EXTRA" jdbcType="VARCHAR"/>
        <result property="columnComment" column="COLUMN_COMMENT" jdbcType="VARCHAR"/>
    </resultMap>


    <sql id="BaseResult_COLUMNS">
          TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, ORDINAL_POSITION, COLUMN_DEFAULT, IS_NULLABLE, DATA_TYPE, CHARACTER_MAXIMUM_LENGTH, CHARACTER_OCTET_LENGTH, NUMERIC_PRECISION, NUMERIC_SCALE, DATETIME_PRECISION, CHARACTER_SET_NAME, COLLATION_NAME, COLUMN_TYPE, COLUMN_KEY, EXTRA, PRIVILEGES, COLUMN_COMMENT, GENERATION_EXPRESSION
    </sql>

    <select id="getColumns" resultMap="ColumnsMap">
        SELECT
            ORDINAL_POSITION,
            COLUMN_NAME,
            COLUMN_TYPE,
            COLUMN_KEY,
            EXTRA,
            IS_NULLABLE,
            COLUMN_DEFAULT,
            COLUMN_COMMENT,
            DATA_TYPE,
            CHARACTER_MAXIMUM_LENGTH
        FROM
            information_schema.COLUMNS
        WHERE
            table_schema = #{dbName} AND table_name = #{tableName}
    </select>

    <select id="getColumsByTableList" resultType="top.b0x0.demo.io.domain.Columns">
        SELECT
        ORDINAL_POSITION,
        COLUMN_NAME,
        COLUMN_TYPE,
        COLUMN_KEY,
        EXTRA,
        IS_NULLABLE,
        COLUMN_DEFAULT,
        COLUMN_COMMENT,
        DATA_TYPE,
        CHARACTER_MAXIMUM_LENGTH
        FROM
        information_schema.COLUMNS
        WHERE
        table_schema = #{dbName} AND table_name in
        <foreach item="item" collection="list" separator="," open="(" close=")" index="index">
            #{item, jdbcType=VARCHAR}
        </foreach>
    </select>
</mapper>